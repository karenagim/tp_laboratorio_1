#ifndef employee_H_INCLUDED
#define employee_H_INCLUDED
typedef struct
{
    int id;
    char nombre[128];
    int horasTrabajadas;
    float sueldo;
}Employee;

Employee* Employee_new();


Employee* Employee_LoadWParameters(char* id,char* nombre,char* horasTrabajadas,char* sueldo);

void employee_delete(Employee*);

int employee_setId(Employee* this,int id);
int employee_getId(Employee* this,int* id);

int employee_setNombre(Employee* this,char* nombre);
int employee_getNombre(Employee* this,char* nombre);

int employee_setHorasTrabajadas(Employee* this,int horasTrabajadas);
int employee_getHorasTrabajadas(Employee* this,int* horasTrabajadas);

int employee_setSueldo(Employee* this,float sueldo);
int employee_getSueldo(Employee* this,float* sueldo);

//int employee_CompareByName(Employee*, Employee*);

int employee_CompareByName(void*, void*);
int employee_CompareById(void* e1, void* e2);

/*--------------funciones para mostrar-------*/
void Employee_PrintOne(Employee* pEmp);

/*--------------funciones ALTA---------------*/
int employee_MaxId(LinkedList* pArrayEmployee);
Employee* loadDataEmployee(Employee* pEmp,LinkedList* pArrayEmployee);
int employee_Alta(LinkedList * pArrayEmployee,Employee* pEmp);


/*--------------MODIFICACION-----------*/
int Employee_edit(LinkedList* pArrayEmployee);

/*---------BAJA --------*/
int Employee_delete(LinkedList* pArrayEmployee);
#endif // employee_H_INCLUDED
